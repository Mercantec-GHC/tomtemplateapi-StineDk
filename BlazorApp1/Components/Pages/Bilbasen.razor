@page "/bilbasen"
@rendermode InteractiveServer
@inject HttpClient httpClient

<h3>Bilbasen</h3>

@if (cars != null)
{
	foreach (var car in cars)
	{
		@* for (var i = 0; i > car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_imageurls != null).attr_imageurls.Count; i++)
		{
			<img src="@(car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_imageurls != null).attr_imageurls[i])" alt="Img" />

		}  *@
		<img src="@(car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_imageurls != null).attr_imageurls[0])" alt="Img" />
		<img src="@(car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_imageurls != null).attr_imageurls[1])" alt="Img" />
		<h3>@car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_makemodel != null).attr_makemodel.FirstOrDefault()</h3>
		<p>@car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_vintage != null).attr_vintage.FirstOrDefault()</p>
		<p>@car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_fuel != null).attr_fuel.FirstOrDefault()</p>
		<p>@(car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.listing_price_raw != null).listing_price_raw.FirstOrDefault()) Dkk</p>
	}
}

@code {
	public List<RootObject> cars;

	protected override async Task OnInitializedAsync()
	{
		base.OnInitialized();
		cars = await httpClient.GetFromJsonAsync<List<RootObject>>("https://magsapi.onrender.com/api/bilbasen");
	}

	public string GetAttrImg(RootObject car, int loop) {
		return car.adTypeProperties.adnuntiusDisplay.kv.First(e => e.attr_imageurls != null).attr_imageurls[loop];
	}
}